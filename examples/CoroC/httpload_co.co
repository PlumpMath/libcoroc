#include <libcoroc.h>

#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include <errno.h>
#include <unistd.h>

char *server;
char *url;

int fetchtask(void) {
  int fd, n;
  char buf[512];

  fprintf(stderr, "starting...\n");
  while (1) {
    if ((fd = tsc_net_dial(true, server, 80)) < 0) {
      fprintf(stderr, "dial %s: %s\n", server, strerror(errno));
      continue;
    }
    snprintf(buf, sizeof buf, "GET %s HTTP/1.0\r\nHost: %s\r\n\r\n", url, server);
    tsc_net_write(fd, buf, strlen(buf));
    while ((n = tsc_net_read(fd, buf, sizeof buf)) > 0);

    close(fd);
    write(1, ".", 1);
  }

  return 0;
}

int main (int argc, char **argv) {
  int i, n;

  if (argc != 4) {
    fprintf(stderr, "usage: httpload n server url\n");
    __CoroC_Quit -1;
  }

  n = atoi(argv[1]);
  server = argv[2];
  url = argv[3];

  for (i = 0; i < n; i++) {
    __CoroC_Spawn fetchtask();
    tsc_udelay(1000);
  }

  while (1) __CoroC_Yield;

  return 0;
}
