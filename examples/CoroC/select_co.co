#include <libcoroc.h>
#include <stdlib.h>
#include <stdio.h>

#define SIZE 4
#define MAKE_CHAN 2

#if (MAKE_CHAN == 1)
void make_chan(__chan_t<int> *chan) {
  *chan = __CoroC_Chan<int>;
}
#elif (MAKE_CHAN == 2)
__chan_t<int> make_chan() {
  return __CoroC_Chan<int>;
}
#endif

int sub_task(__chan_t<int> chan) {
  int id = random();
  chan << id;
  __CoroC_Quit 0;
}

int main(int argc, char** argv) {
  __chan_t<int> chans[SIZE];
  int i = 0, id;

  for (; i < SIZE; i++) {
#if (MAKE_CHAN == 0)
    chans[i] = __CoroC_Chan<int>;
#elif (MAKE_CHAN == 1)
    make_chan(&chans[i]);
#elif (MAKE_CHAN == 2)
	chans[i] = make_chan();
#endif
	__CoroC_Spawn sub_task(chans[i]);
  }

  for (i = 0; i < SIZE; i++) {
    __CoroC_Select {
	  __CoroC_Case (chans[0] >> id) {}
	  __CoroC_Case (chans[1] >> id) {}
	  __CoroC_Case (chans[2] >> id) {}
	  __CoroC_Case (chans[3] >> id) {}
	}

    printf("[main task]: recv id is %d!\n", id);
  }
  
  return 0;
}
